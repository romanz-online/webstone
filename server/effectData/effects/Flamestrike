import GameState from '../../GameState'
import Minion from '../../minionData/minion'
import Effect from '../effect'
import EFFECT_ID from '../effectID.json'
import { engine } from '../../Engine'
import Event from '../../event'
import { EventType } from '../../constants'

class Flamestrike extends Effect {
  constructor(player: number, source: Minion) {
    super(EFFECT_ID.FLAMESTRIKE, player, source, null)
  }

  apply(source: Minion, target: Minion | null): void {
    if (!this.gameState || !source) {
      console.error('Missing values to properly execute effect')
    }

    engine.queueEvent([
      new Event(EventType.Damage, {
        source: source,
        target: target,
        amount: this.getAmount(),
      }),
    ])
  }
}

export default Flamestrike
